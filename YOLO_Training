Projeto de criação de uma base de dados e treinamento da rede YOLO

1. Usei chatGPT para me orientar na sequência de treinamento.
Minha solução consiste em treinar um modelo com ROBOFLOW.IO, e utilizar a mesma base de dados para treinar um modelo YOLO no COLAB.
Assim, consigo avaliar os dois modelos.

Classes:
1) Workers (Trabalhadores)
2) Persons (Pessoas)

A) O Modelo consegue identificar nas imagens quem são os trabalhadores e quem são as pessoas comuns nos canteiros de obras.
Roboflow: https://app.roboflow.com/kingofdendroar/workers-myp9o/2

Resultados:
mAP 93.3%
Precision 90.6%
Recall 88.9%

B) COLAB (Com a ajuda do ChatGPT)
Link COLAB: https://colab.research.google.com/drive/1cRBXBnpW2jZV_aMqUhDvHWJpQGlsd6tO#scrollTo=v2nQWg1rKGan
Resultados:
'metrics/mAP50-95(B)': 0.5038332189218437,
'metrics/mAP50(B)': 0.905729151143753,
'metrics/precision(B)': 0.8897839916258403,
'metrics/recall(B)': 0.8329412627511303,
'fitness': 0.5440228121440347

Podemos concluir que o modelo do ROBOFLOW é mais eficiente que o do COLAB.


Step 1: Check Dataset Structure
After unzipping the dataset with:

!unzip -o roboflow.zip -d roboflow_dataset
The directory structure should look something like this:

roboflow_dataset/
├── train/
│   ├── images/
│   ├── labels/
├── valid/
│   ├── images/
│   ├── labels/
├── test/
│   ├── images/
│   ├── labels/
├── data.yaml
If this structure is missing, there might have been an issue during extraction. Verify it using:


!ls -R roboflow_dataset
Step 2: Inspect the data.yaml File
Open and check the data.yaml file to ensure the paths are correct:

!cat roboflow_dataset/data.yaml
The data.yaml file should look similar to:

train: roboflow_dataset/train/images
val: roboflow_dataset/valid/images
test: roboflow_dataset/test/images

nc: <number_of_classes>
names: [<class1>, <class2>, ...]
Key points to verify:

Paths exist: Check that train, val, and test paths are valid.
Classes: Ensure the nc (number of classes) and names (class labels) are defined properly.
If the paths in data.yaml are incorrect, fix them manually or programmatically:

import yaml

data_path = "roboflow_dataset/data.yaml"
with open(data_path, 'r') as f:
    data = yaml.safe_load(f)

# Update paths
data['train'] = 'roboflow_dataset/train/images'
data['val'] = 'roboflow_dataset/valid/images'
data['test'] = 'roboflow_dataset/test/images'

# Save the updated YAML file
with open(data_path, 'w') as f:
    yaml.dump(data, f)

print("Updated data.yaml:")
!cat roboflow_dataset/data.yaml
Step 3: Retry Training
Run the YOLOv8 training command again:

model.train(
    data="roboflow_dataset/data.yaml",
    epochs=50,
    batch=16,
    imgsz=640
)
Step 4: Additional Debugging
If the issue persists:

Verify Images Exist: Ensure the images folder contains actual image files:

!ls roboflow_dataset/train/images | head
Verify Labels Exist: Check that the labels folder contains .txt files corresponding to the images:

!ls roboflow_dataset/train/labels | head
Re-download Dataset: If the dataset structure still seems broken, re-download it from Roboflow:

!curl -L "https://app.roboflow.com/ds/8QTj4d1hoI?key=FZH4kTMY53" > roboflow.zip
